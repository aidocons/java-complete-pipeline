steps:
- id: mvn-compile
  name: maven:3.3-jdk-8
  entrypoint: sh
  args:
  - -c
  - |
    mvn compile
- id: mvn-Build
  name: maven:3.3-jdk-8
  entrypoint: sh
  args:
  - -c
  - |
    mvn package -DskipTests=true
- id: check-artifact-registry
  name: gcr.io/cloud-builders/gcloud
  entrypoint: sh
  args:
  - -c
  - |
    REPO_NAME="java-complete-pipeline"
    LOCATION="europe-west1"
    PROJECT_ID="${PROJECT_ID}"

    if gcloud artifacts repositories describe ${REPO_NAME} --project=${PROJECT_ID} --location=${LOCATION} >/dev/null 2>&1; then
      echo "Repository ${REPO_NAME} exists."
    else
      echo "Repository ${REPO_NAME} does not exist. Creating it..."
      gcloud artifacts repositories create ${REPO_NAME} --project=${PROJECT_ID} --repository-format=docker --location=${LOCATION} --description="Docker repository for java-complete-pipeline"
    fi
- id: Docker-build-push-artifact-registry
  name: gcr.io/cloud-builders/docker
  entrypoint: bash
  args:
  - -c
  - |
    docker build -t europe-west1-docker.pkg.dev/aidodev/java-complete-pipeline/app:latest .
    docker push europe-west1-docker.pkg.dev/aidodev/java-complete-pipeline/app:latest
# - id: Cloudrun-artifact-registry
  # name: gcr.io/cloud-builders/gcloud
  # entrypoint: sh
  # args:
  # - -c
  # - |-
  #   echo "***************************"
  #   echo europe-west1-docker.pkg.dev/aidodev/java-complete-pipeline/app:latest
  #   echo "****************************"

  #   gcloud run deploy java-test \
  #   --region=europe-west1 \
  #   --image=europe-west1-docker.pkg.dev/aidodev/java-complete-pipeline/app:latest \
  #   --set-secrets=OPENAI_KEY=OPEN_AI_KEY:latest
options:
  logging: CLOUD_LOGGING_ONLY
